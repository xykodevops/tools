#!/usr/bin/env ruby
# coding: utf-8
require 'rubygems'
require 'tools'



r = ToolsPrompt.yes? 'Do you like Ruby?'
ap r
r = ToolsPrompt.ask 'What is your name?', default: ENV['USER']
ap r
# r = ToolsPrompt.mask("What is your secret?")

# aux = [
# "\tScorpion".yellow,
# "\tKano".yellow,
# "\tJax".yellow,
# ]

# r = ToolsPrompt.select("Choose your destiny?", aux)
# ap r


# choices = %w(vodka beer wine whisky bourbon)
# prompt.multi_select("Select drinks?", choices)

# choices = %w(emacs nano vim)
# prompt.enum_select("Select an editor?", choices)


# name = prompt.ask("What is your name?") do |q|
#   q.required true
#   q.validate /\A\w+\Z/
#   q.modify   :capitalize
# end
# ap name


# ap prompt.keypress("Press any key to continue, resumes automatically in 3 seconds ...".yellow, timeout: 3)

# default_editor = '/home/francisco/sublime_text_3/sublime_text'

# result = ToolsFiles.open_file '/home/francisco/.newcmdapi/oldcmdapi.config'
# unless result.true?
#   ap result
# end



#ToolsCache.create_cache_file 'cmdapi', '/home/francisco/.newcmdapi/teste-persistent.cache', 60

# cache.clear

# ToolsCache.cmdapi_set :ldap, {:rogerio  => {:name => 'rogerio'}}
# ToolsCache.cmdapi_set :ldap, {:wagner => {:name => 'wagner'}}

# ToolsCache.cmdapi_set :cloud, [100,200]
# ToolsCache.cmdapi_set :cloud, 300
# ToolsCache.cmdapi_set :cloud, [300,500,'teste']
# ToolsCache.cmdapi_set :cloud, "teste2"
# ToolsCache.cmdapi_set :cloud, {:teste => 1}


# ToolsCache.cmdapi_set :nat, "texto para nat"
# ToolsCache.cmdapi_set :nat, "texto para nat_ depois da primeira"


# # ToolsCache.cmdapi_setext :ldap, {:francisco => {:name => 'francisco'}}
# # ToolsCache.cmdapi_setext :ldap, {:wagner    => {:name => 'wagner'}, :leandro  => {:name => 'leandro'}}

#ap ToolsCache.cmdapi_list
#sleep 30
#ap ToolsCache.cmdapi_list
#sleep 30
#ap ToolsCache.cmdapi_list


# ToolsCache.cmdapi_unset :nat
# ToolsCache.cmdapi_set :nat, "texto para nat_ depois da primeira"


# cache = ToolsCache.cmdapi_list
# ap cache



# ToolsCache.cmdapi_unsetext :ldap, :francisco


# cache = ToolsCache.cmdapi_list
# ap cache


# cache.each do |key|
#   puts "#{key} - #{cache[key]}"
# end





# ap ToolsCache.cmdapi_get 'ldap'


# ap ToolsCache.cmdapi_list

# valor = '100'
# ToolsCache.cmdapi_add "variÃ¡vel", valor





# file_to_load =  "/home/francisco/2018/xykotools/cmdapi/lib/files/proxy_sample.txt"
# file = ToolsFiles.load_file file_to_load
# ap file


# ToolsLog.create_log_file 'xyko', '/home/francisco/2018/xykotools/tools/xyko.log'

# ToolsLog.xyko_info 'Minitest.: test_cmdapi_ldap_validate'
# ToolsLog.xyko_info 'teste do methodo1', :yellow
# ToolsLog.xyko_info 'teste do methodo1', :light_green


#ToolsDisplay.show_colorize "Minitest.:".red + " test_cmdapi_ldap_validate".white


# teste = '123'

# ap teste.num?
# ap teste

# ap NetAddr::CIDR.methods.sort
# net = NetAddr::CIDR.create ip
# ap net


# teste = false
# if teste.boolean?
#   if teste
#     puts "true"
#   else
#     puts "false"
#   end
# end
# ap teste.boolean?

# ToolsDisplay.show "teste", :green
# ToolsDisplay.show "TEXT SAMELINE sem cor ", :sameline
# ToolsDisplay.show "+ SAMELINE"
# ToolsDisplay.show "TEXT SAMELINE com cor ", :sameline, :red
# ToolsDisplay.show "TEXT GREEN", :green
# ToolsDisplay.show "TEXT YELLOW", :yellow


# msg       = "teste do encrypt".light_blue
# passwd    = 'tools999'
# encrypted = msg.encrypt passwd
# puts (encrypted.decrypt passwd)


# ip = `ifconfig | grep -F 10. | awk '{print $2}' | cut -d: -f2`
# ip = ip.split("\n").first if ip.include? "\n"

# ToolsDisplay.show (IPAddress.valid?(ip)).to_s, :yellow

# ap ip

# ret = ToolsNet.resolv_ip_name '8.8.8.8'
# ap ret
# dns = ToolsNet.resolv_dns 'www.globo.com'
#ToolsDisplay.show dns





 # ToolsLog.create_log_file 'xyko', '/home/francisco/2018/xykotools/tools/xyko.log'
 # ToolsLog.xyko_info 'teste do methodo1', :light_yellow
 # ToolsLog.xyko_warn 'teste do methodo2'
 # ToolsLog.xyko_error 'teste do methodo3'
 # ToolsLog.xyko_debug 'teste do methodo4'


# ToolsFiles.create_dir Tools.home + '/2018/xykotools/tools/home', 'tools_home'
# home = (ToolsUtil.get_variable 'tools_home')

# ToolstoolConfig.load_config config_file
# config = ToolsUtil.get_variable 'config_data'
# ap config

# ToolsConfig.insert_in_config config_file, {:info1 => "teste1"}
# ToolsConfig.insert_in_config config_file, {:info2 => "teste1"}
# ToolsConfig.insert_in_config config_file, {:info3 => "teste1"}
# ToolsConfig.load_config config_file
# config = ToolsUtil.get_variable 'config_data'
# ap config


# ToolsConfig.load_config home, 'config'
# ToolsConfig.write_config home, 'config'


# ToolsConfig.create_config_file '/home/francisco/2018/xykotools/tools', 'config'
# config_file = (ToolsUtil.get_variable 'config_file_location')


# data = {
#     "graylogx" => {
#         "status" => false
#     }
# }

# data2 = {"cmdapi" => {
#           "graylogy" => {
#             "status" => false,
#             'teste' => 100,
#         }
#       }}

# ToolsConfig.insert_in_config config_file, data
# ToolsConfig.insert_in_config config_file, data2

# config = ToolsConfig.load_config config_file


# ap config



# ToolsCache.create_cache_file 'xyko', '/home/francisco/2018/xykotools/tools'

# data = {:key => '100', }

# ToolsCache.xyko_set data
# ToolsCache.xyko_unset data


# ToolsConfig.create_config_file 'glbapi', '/home/francisco/.glbapi/glbapi.config'

# k = 'teste_xxx'
# pattern = { "status": Integer}
# ToolsConfig.insert_in_config "/home/francisco/.newcmdapi/cmdapi.config", {'cmdapi' => {"#{k}" => pattern}}